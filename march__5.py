# -*- coding: utf-8 -*-
"""march _5.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1QwsdxdkfQW1o6jo3YQz1I019i77yU3sO
"""

"""Q1. How can you create a Bokeh plot using Python code?"""
#Ans:

import bokeh.io
import bokeh.plotting
bokeh.io.output_notebook()

from bokeh.plotting  import figure , output_file, show
output_file("test.html")

# Create a new plot with a title and axis labels
plot = figure(title="Simple Bokeh Scatter Plot", x_axis_label="X-axis", y_axis_label="Y-axis")

# Example data
x_values = [1, 2, 3, 4, 5]
y_values = [6, 7, 2, 4, 9]

# Add a scatter glyph
plot.circle(x_values, y_values, size=10, color="navy", alpha=0.8)

# Show the plot (in a Jupyter Notebook, use output_notebook() before show())
show(plot)

""" Q2. What are glyphs in Bokeh, and how can you add them to a Bokeh plot? Explain with an example."""
#Ans: In Bokeh, glyphs are the visual building blocks used to create various types of plots such as scatter plots, line plots, bar plots, and more. Each glyph represents a specific type of visual element, such as circles, lines, bars, or patches. These glyphs are added to a Bokeh plot to represent the data in an interactive and visually appealing manner
from bokeh.plotting import figure, show
from bokeh.io import output_notebook

# Create a new plot with a title and axis labels
plot = figure(title="Bokeh Glyph Example", x_axis_label="X-axis", y_axis_label="Y-axis")

# Example data
x_values = [1, 2, 3, 4, 5]
y_values = [6, 7, 2, 4, 9]

# Add circle glyphs to the plot
plot.circle(x=x_values, y=y_values, size=10, color="navy", alpha=0.8)

# Add line glyphs to the plot
plot.line(x=x_values, y=y_values, line_width=2, line_color="red", line_dash="dashed")

# Show the plot (in a Jupyter Notebook, use output_notebook() before show())
show(plot)

""" Q3. How can you customize the appearance of a Bokeh plot, including the axes, title, and legend?"""
#Ans: Bokeh provides extensive customization options, allowing you to control various visual aspects to match your desired design.
import bokeh.io
import bokeh.plotting
bokeh.io.output_notebook()

from bokeh.plotting  import figure , output_file, show
from bokeh.sampledata.iris import flowers

output_file("test.html")

p = figure(title = "test flower")
p.xaxis.axis_label = "Petal length "
p.yaxis.axis_label = "Petal width "
p.circle(flowers['petal_length'], flowers['petal_width'], fill_color = 'red', legend_label = 'red poits')
show(p)

""" Q4. What is a Bokeh server, and how can you use it to create interactive plots that can be updated in
real time?"""
#Ans: A Bokeh server is a component of the Bokeh library that allows you to create interactive web applications with real-time updating capabilities. It enables you to build dynamic and interactive plots, dashboards, and data visualization tools that can respond to user inputs or data changes without the need to regenerate and reload the entire webpage.
from bokeh.plotting import figure, curdoc
from bokeh.models import Slider
from bokeh.layouts import column

# Create a figure
plot = figure(title="Real-Time Interactive Plot", tools="pan,box_zoom,reset")

# Create a scatter plot with initial data
x_values = [1, 2, 3, 4, 5]
y_values = [6, 7, 2, 4, 9]
plot.circle(x_values, y_values, size=10)

# Create a slider widget
slider = Slider(start=1, end=10, value=5, step=0.1, title="Value")

# Define a callback function to update the plot
def update(attr, old, new):
    new_value = slider.value
    updated_y_values = [value * new_value for value in y_values]
    plot.data_source.data["y"] = updated_y_values

# Attach the callback to the slider's value attribute
slider.on_change("value", update)

# Arrange the plot and widget in a layout
layout = column(slider, plot)

# Add the layout to the current document
curdoc().add_root(layout)

""" Q5. How can you embed a Bokeh plot into a web page or dashboard using Flask or Django?"""
#Ans: Embedding a Bokeh plot into a web page or dashboard using Flask or Django involves creating a web application that integrates Bokeh plots and serves them through the application's framework